import java.io.*;

class Order
{
    boolean entry=false;
    String str[]=new String[3];

    synchronized void d_TakeOrder(Thread t)
    {
        if(entry)
        {
            try
            {
                wait();        
            }catch(InterruptedException e)
            {
                System.out.println(e);
            }
        }
        System.out.println("\n"+t);
        try
        {
            BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
            for(int i=0;i<3;i++)
            {
                System.out.print("\n Take an Order "+(i+1)+" :: ");
                str[i]=br.readLine();
            }
        }catch(IOException e)
        {
            System.out.println(e);
        }

        entry=true;
        notify();
    }
    synchronized void d_DisplayOrder(Thread t)
    {
        if(!entry)
        {
            try
            {
                wait();        
            }catch(InterruptedException e)
            {
                System.out.println(e);
            }
        }
        System.out.println("\n"+t);
        for(int i=0;i<3;i++)
        {
            System.out.print("\n Place  Order "+(i+1)+" :: "+str[i]);
        }
        entry=false;
        notify();
    }
    
}
class TakeOrder implements Runnable
{
    Order d;
    Thread t;
    TakeOrder(Order d)
    {
        this.d=d;
        t=new Thread(this,"Manager take an order");
        t.start();
    }
    publicvoid run()
    {
        for(int i=0;i<2;i++)
        {
            d.d_TakeOrder(t);
        }
    }
}
class DisplayOrder implements Runnable
{
    Order d;
    Thread t;
    DisplayOrder(Order d)
    {
        this.d=d;
        t=new Thread(this,"Manager place an order");
        t.start();
    }
    publicvoid run()
    {
        for(int i=0;i<2;i++)
        {
            d.d_DisplayOrder(t);
        }
    }
}
class RestaurantManagement
{
    publicstaticvoid main(String args[])
    {
        Order d=new Order();
        new TakeOrder(d);
        new DisplayOrder(d);
    }
}
